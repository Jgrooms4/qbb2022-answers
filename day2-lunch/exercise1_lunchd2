#!/usr/bin/env python3

import sys

def parse_bed(fname):
    try:
        fs = open(fname, 'r')
    except:
        raise FileNotFoundError("That file doesnâ€™t appear to exist")
    bed = []
    field_types = [str, int, int, str, float, str, int, int, str, int, str, str]
    for i, line in enumerate(fs):
        if line.startswith("#"):
            continue
        fields = line.rstrip().split()
        fieldN = len(fields)
        if fieldN < 3 or fieldN == 10 or fieldN == 11:
            print(f"Line {i} appears malformed b", file=sys.stderr)
        try:
            for j in range(min(len(field_types), len(fields))):
               
                # "chr1,chr2" = .split(",")("chr1,chr2")
                # "chr1,chr2".split(",")
                
                if j == 8 or j == 10 or j == 11:
                    fields[j] = fields[j].rstrip(',').split(',')
                    #print(fields[j])
                    fields[j] = [int(t) for t in fields[j]]
                    #print(fields[j])
                    #len(field[10] = field[9])
                    #len(field[11] = field[9])
                    #field[9] == len(field[10])
                    #field[9] == len(field[11]) 
                else:
                    fields[j] = field_types[j](fields[j])
                
            # for column 9, split the string into a list
            bed.append(fields)
            #print(fieldN)
        except:
            print(f"Line {i} appears malformed from except", file=sys.stderr)
    return bed

if __name__ == "__main__":
#only runs if not imported - if run from command line
    fname = sys.argv[1]
    bed = parse_bed(fname)
    print(bed)
